// Copyright (c) 2019, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: const MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  final String title;

  const MyHomePage({
    Key? key,
    required this.title,
  }) : super(key: key);

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;
  List<String> urls = [];
  List<TextEditingController> texts = [];

  void _incrementCounter() {
    setState(() {
      _counter++;
      texts.add(TextEditingController());
      urls.add('');
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
      ),
      body: Column(children: [
        Expanded(
            child: ListView.builder(
                itemCount: texts.length,
                itemBuilder: (BuildContext context, int index) {
                  return Padding(
                      padding: const EdgeInsets.all(5),
                      child: Row(children: [
                        Flexible(
                            child: TextField(
                          onChanged: (value) =>
                              {urls[index] = value, print(urls)},
                          controller: texts[index],
                          decoration: const InputDecoration(
                            border: OutlineInputBorder(),
                            labelText: 'szÃ¶veg',
                          ),
                        )),
                        Padding(
                            padding: const EdgeInsets.all(5),
                            child: ElevatedButton(
                                onPressed: () => {
                                      setState(() {
                                        texts.removeAt(index);
                                        urls.removeAt(index);
                                      })
                                    },
                                child: const Text('X')))
                      ]));
                }))
      ]),
      floatingActionButton: FloatingActionButton(
        onPressed: _incrementCounter,
        tooltip: 'Increment',
        child: const Icon(Icons.add),
      ),
    );
  }
}
